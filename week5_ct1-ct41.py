# 1 Ряд - 1
# Даны два целых числа A и B (при этом A≤B). Выведите все числа от A до B включительно.
a, b = int(input()), int(input())
for i in range(a, b+1):
    print(i, end=' ')

# 2 Ряд - 2
# Даны два целых числа A и В. Выведите все числа от A до B включительно, в порядке возрастания,если A < B,
# или в порядке убывания в противном случае.
a, b = int(input()), int(input())
if a < b:
    for i in range(a, b + 1):
        print(i, end=' ')
else:
    for i in range(a, b - 1, -1):
        print(i, end=' ')

# 3 Ряд - 3
# Дано натуральное число n. Напечатайте все n-значные нечетные натуральные числа в порядке убывания.
n = int(input())
s = int(str(9) * n)
f = int(str(1) + str(0) * (n-1)) - 1
for i in range(s, f, -2):
    print(i, end=' ')

# 4 Сумма квадратов
# По данному натуральном n вычислите сумму 1²+2²+3²+...+n².
n = int(input())
sum = 0
for i in range(1, n+1):
    sum+= i**2
print(sum)

# 5 Флаги
# Напишите программу, которая по данному числу n от 1 до 9 выводит на экран n флагов.
# Изображение одного флага имеет размер 4×4 символов, между двумя соседними флагами также имеется
# пустой (из пробелов) столбец. Разрешается вывести пустой столбец после последнего флага.
# Внутри каждого флага должен быть записан его номер — число от 1 до n.
n = int(input())
print('+___ ' * n)
for i in range(1, n + 1):
    print('|' + str(i) + ' / ', end='')
print()
print('|__\ ' * n)
print('|    ' * n)

# 6 Количество нулей
# Дано несколько чисел. Подсчитайте, сколько из них равны нулю, и выведите это количество.
# Сначала вводится число N, затем вводится ровно N целых чисел.
qty = int(input())
count = 0
for i in range(1, qty + 1):  # Здесь можно range(qty)
    if int(input()) == 0:
        count += 1
print(count)

# 7 Лесенка
# По данному натуральному n≤9 выведите лесенку из n ступенек, i-я ступенька состоит из чисел от 1 до i без пробелов.
n = int(input())
for i in range(n):
    print(*range(1, i + 2), sep='')

# 8 Замечательные числа - 1
# Найдите и выведите все двузначные числа, которые равны удвоенному произведению своих цифр.
# Программа не требует ввода данных с клавиатуры, просто выводит список искомых чисел.
for i in range(10, 100):
    if (i // 10) * (i % 10) * 2 == i:
        print(i, end=' ')

# 9 иофантово уравнение - 2
# Даны числа a, b, c, d, e. Подсчитайте количество таких целых чисел от 0 до 1000 (включительно),
# которые являются корнями уравнения (ax³+bx²+cx+d)/(x-e)=0, и выведите их количество.
# Вводятся целые числа a, b, c, d и e.
a, b, c = int(input()), int(input()), int(input())
d, e = int(input()), int(input())
count = 0
for x in range(1001):
    if x != e and ((a * (x ** 3) + b * (x ** 2) + c * x + d) /
                   (x - e)) == 0:
        count += 1
print(count)

# 10 Сумма факториалов
# По данному натуральному n вычислите сумму 1!+2!+3!+...+n!. В решении этой задачи можно использовать только один цикл.
n = int(input())
total = 0
factorial = 1
for i in range(1, n + 1):
    factorial *= i
    total += factorial
print(total)

# 11 Потерянная карточка
# Для настольной игры используются карточки с номерами от 1 до N.Одна карточка потерялась.
# Найдите ее, зная номера оставшихся карточек.
# Дано число N, далее N-1 номер оставшихся карточек (различные числа от 1 до N).
# Программа должна вывести номер потерянной карточки.
qty = int(input())
card_num = qty
for i in range(1, qty):
    n = int(input())
    card_num += (i-n)
print(card_num)

# 12 Замечательные числа - 4
# Даны два четырёхзначных числа A и B. Выведите все четырёхзначные числа на отрезке от A до B,
# запись которых является палиндромом.
a, b = int(input()), int(input())
for i in range(a, b+1):
    first_num = int(str(i)[:2])
    second_num = int(str(i)[-1:-3:-1])
    if first_num == second_num:
        print(i)

# 13 Четные индексы
# Выведите все элементы списка с четными индексами (то есть A[0], A[2], A[4], ...).
# Программа должна быть эффективной и не выполнять лишних действий!
# Вводится список чисел. Все числа списка находятся на одной строке.
a = input().split()
for i in range(0, len(a), 2):
    print(a[i], end=' ')

# 14 Четные элементы
# Выведите все четные элементы списка.
# Вводится список чисел. Все числа списка находятся на одной строке.
a = list(map(int, input().split()))
for i in range(len(a)):
    if a[i] % 2 == 0:
        print(a[i], end=' ')

# 15 Количество положительных
# Найдите количество положительных элементов в данном списке.
# Вводится список чисел. Все числа списка находятся на одной строке.
a = list(map(int, input().split()))
count = 0
for i in range(len(a)):
    if a[i] > 0:
        count += 1
print(count)

# 16 Последний максимум
# Найдите наибольшее значение в списке и индекс последнего элемента, который имеет данное значение
# за один проход по списку, не модифицируя этот список и не используя дополнительного списка.
# Выведите два значения.
a = list(map(int, input().split()))
max_num = a[0]
ind = 0
for i in range(len(a)):
    if a[i] >= max_num:
        max_num = a[i]
        ind = i
print(max_num, ind)

# 17 Больше предыдущего
# Дан список чисел. Выведите все элементы списка, которые больше предыдущего элемента.
a = list(map(int, input().split()))
for i in range(1, len(a)):
    if a[i] > a[i-1]:
        print(a[i], end=' ')

# 18* Возрастает ли список?
# Дан список. Определите, является ли он монотонно возрастающим(то есть верно ли, что каждый элемент этого списка
# больше предыдущего).Выведите YES, если массив монотонно возрастает и NO в противном случае.
# Решение оформите в виде функции IsAscending(A).В данной функции должен быть один цикл while,
# не содержащий вложенных условий и циклов — используйте схему линейного поиска.
def IsAscending(a):
    i = 1
    while i < len(a) and a[i] > a[i - 1]:
        i += 1
    if i == len(a):
        return print('YES')
    else:
        return print('NO')


a = list(map(int, input().split()))
IsAscending(a)

# 19* Соседи одного знака
# Дан список чисел. Если в нем есть два соседних элемента одного знака, выведите эти числа. Если соседних элементов
# одного знака нет - не выводите ничего. Если таких пар соседей несколько - выведите первую пару.
a = list(map(int, input().split()))
i = 1
while i < len(a):
    if a[i] * a[i - 1] >= 0:
        print(a[i - 1], a[i])
        break
    i += 1

# 20* Больше своих соседей
# Дан список чисел. Определите, сколько в этом списке элементов, которые больше двух своих соседей
# и выведите количество таких элементов.
a = list(map(int, input().split()))
count = 0
for i in range(1, len(a) - 1):
    if a[i - 1] < a[i] > a[i + 1]:
        count += 1
print(count)

# 21* Наибольший элемент
# Дан список чисел. Выведите значение наибольшего элемента в списке, а затем индекс этого элемента в списке.
# Если наибольших элементов несколько, выведите их значение и индекс первого из них.
a = list(map(int, input().split()))
print(max(a), a.index((max(a))))

# 22* Наименьший положительный
# Выведите значение наименьшего из всех положительных элементов в списке. Известно, что в списке есть хотя бы один
# положительный элемент, а значения всех элементов списка по модулю не превосходят 1000.
a = list(map(int, input().split()))
min_plus_num = max(a)
for i in a:
    if 0 < i < min_plus_num:
        min_plus_num = i
print(min_plus_num)

# 23* Наименьший нечетный
# Выведите значение наименьшего нечетного элемента списка, гарантируется,
# что хотя бы один нечётный элемент в списке есть.
a = list(map(int, input().split()))
min_odd_num = min(a)
while min_odd_num % 2 == 0:
    a.remove(min(a))
    min_odd_num = min(a)
print(min_odd_num)

# 24* Вывести в обратном порядке
# Выведите элементы данного списка в обратном порядке, не изменяя сам список.
a = list(map(int, input().split()))
for i in range(len(a)-1, -1, -1):
    print(a[i], end=' ')

# 25* Переставить в обратном порядке
# Переставьте элементы данного списка в обратном порядке, затем выведите элементы полученного списка.
# Эта задача отличается от предыдущей тем, что вам нужно изменить значения элементов самого списка,
# поменяв местами A[0] c A[n-1], A[1] с A[n-2], а затем вывести элементы списка подряд.
# Предлагается в учебных целях проделать это вручную, например, не используя срезов и стандартных функций.
a = input().split()
for i in range(len(a) // 2):
    a[i], a[len(a) - 1 - i] = a[len(a) - 1 - i], a[i]
print(*a)

# 26* Удалить элемент
# Дан список из чисел и индекс элемента в списке k. Удалите из списка элемент с индексом k, сдвинув влево все элементы,
# стоящие правее элемента с индексом k. Программа получает на вход список, затем число k.
# Программа сдвигает все элементы,а после этого удаляет последний элемент списка при помощи метода pop().
# Программа должна осуществлять сдвиг непосредственно в списке, а не делать это при выводе элементов.
# Также нельзя использовать дополнительный список.
# Метод pop(index) у списка позволяет решить эту задачу в одну команду. Но в этой задаче мы хотим,
# чтобы метод pop(index) не использовался: реализуйте удаление элемента самостоятельно.
a = list(map(int, input().split()))
k = int(input())
for i in range(k, len(a)-1):
    a[i], a[i+1] = a[i+1], a[i]
a.pop()
print(*a)

# 27* Вставить элемент
# Дан список целых чисел, число k и значение C. Необходимо вставить в список на позицию с индексом k элемент, равный C,
# сдвинув все элементы, имевшие индекс не менее k, вправо. Поскольку при этом количество элементов в списке
# увеличивается, после считывания списка в его конец нужно будет добавить новый элемент, используя метод append.
# Вставку необходимо осуществлять уже в считанном списке,
# не делая этого при выводе и не создавая дополнительного списка.
# Метод insert у списка позволяет решить эту задачу в одну команду. Но в этой задаче мы хотим,
# чтобы метод insert не использовался: реализуйте вставку элемента самостоятельно.
a = list(map(int, input().split()))
k, c = map(int, input().split())
a.append(c)
for i in range(len(a)-1, k, -1):
    a[i], a[i-1] = a[i-1], a[i]
print(*a)

# 28 Ближайшее число
# Напишите программу, которая находит в массиве элемент, самый близкий по величине к  данному числу.
# В первой строке задается одно натуральное число N, не превосходящее 1000 – размер массива.
# Во второй строке содержатся N чисел – элементы массива (целые числа, не превосходящие по модулю 1000).
# В третьей строке вводится одно целое число x, не превосходящее по модулю 1000.
# Вывести значение элемента массива, ближайшее к x. Если таких чисел несколько, выведите любое из них.
n = int(input())
a = list(map(int, input().split()))
x = int(input())
delta = abs(a[0]-x)
nearest = a[0]
for i in range(len(a)):
    if abs(a[i]-x) < delta:
        delta = abs(a[i]-x)
        nearest = a[i]
    if delta == 0:
        break
print(nearest)

# 29* Шеренга
# Петя перешёл в другую школу. На уроке физкультуры ему понадобилось определить своё место в строю.
# Помогите ему это сделать.
# Программа получает на вход невозрастающую последовательность натуральных чисел,
# означающих рост каждого человека в строю. После этого вводится число X – рост Пети.
# Все числа во входных данных натуральные и не превышают 200.
# Выведите номер, под которым Петя должен встать в строй. Если в строю есть люди с одинаковым ростом,таким же,
# как у Пети, то он должен встать после них.
a = list(map(int, input().split()))
x = int(input())
i = 0
while i < len(a) and x <= a[i]:
    i += 1
print(i+1)

# 30* Количество различных элементов
# Дан список, упорядоченный по неубыванию элементов в нем.Определите, сколько в нем различных элементов.
a = list(map(int, input().split()))
count = 1
for i in range(1, len(a)):
    if a[i] > a[i - 1]:
        count += 1
print(count)

# 31 Переставить соседние
# Переставьте соседние элементы списка (A[0] c A[1],A[2] c A[3] и т.д.).Если элементов нечетное число,
# то последний элемент остается на своем месте.
a = list(map(int, input().split()))
for i in range(1, len(a), 2):
    a[i], a[i - 1] = a[i - 1], a[i]
print(*a)

# 32* Циклический сдвиг вправо
# Циклически сдвиньте элементы списка вправо(A[0] переходит на место A[1], A[1] на место A[2], ...,
# последний элемент переходит на место A[0]).
# Используйте минимально возможное количество операций присваивания.
# Не используйте срезы.
# Измените начальный список и вывдите ответ с помощью print(*listName).
a = list(map(int, input().split()))
a.insert(0, a.pop())
print(*a)

# 33 Переставить min и max
# В списке все элементы попарно различны. Поменяйте местами минимальный и максимальный элемент этого списка.
a = list(map(int, input().split()))
mii = a.index(min(a))
mai = a.index(max(a))
a[mii], a[mai] = a[mai], a[mii]
print(*a)

# 34* Наибольшее произведение двух чисел
# Дан список, заполненный произвольными целыми числами. Найдите в этом списке два числа,
# произведение которых максимально. Выведите эти числа в порядке неубывания.
# Решение должно иметь сложность O(n), где n - размер списка. То есть сортировку использовать нельзя.
a = list(map(int, input().split()))
min1, max1 = min(a), max(a)
a.remove(min1)
a.remove(max1)
min2, max2 = min(a), max(a)
print(min1, min2) if min1 * min2 >= max1 * max2 else print(max2, max1)
# не учитывает списков длиной менее 4 и наличие 0 значений.

# 35* Наибольшее произведение трех чисел
# В данном списке из n≤10⁵ целых чисел найдите три числа,произведение которых максимально.
# Решение должно иметь сложность O(n), где n - размер списка. То есть сортировку использовать нельзя.
# Выведите три искомых числа в любом порядке.
a = list(map(int, input().split()))
mml = []
mii = 2
mai = 3
while len(a) and mii > 0:
    mii -= 1
    mml.append(min(a))
    a.remove(min(a))
while len(a) and mai > 0:
    mai -= 1
    mml.append(max(a))
    a.remove(max(a))
if len(mml) <= 3:
    print(*mml)
elif len(mml) == 4:
    print(mml[0], mml[1], mml[2]) \
        if mml[0] * mml[1] * mml[2] >= mml[1] * mml[2] * mml[3] else \
        print(mml[1], mml[2], mml[3])
else:
    print(mml[0], mml[1], mml[2]) \
        if mml[0] * mml[1] * mml[2] >= mml[2] * mml[3] * mml[4] else \
        print(mml[2], mml[3], mml[4])

# 36* Количество совпадающих пар
# Дан список чисел. Посчитайте, сколько в нем пар элементов, равных друг другу.
# Считается, что любые два элемента, равные друг другу образуют одну пару, которую необходимо посчитать.
a = list(map(int, input().split()))
count = 0
for i in range(len(a)-1):
    for j in range(i+1, len(a)):
        if a[i] == a[j]:
            count += 1
print(count)

# 37* Уникальные элементы
# Дан список. Выведите те его элементы, которые встречаются в списке только один раз.
# Элементы нужно выводить в том порядке, в котором они встречаются в списке.
a = list(map(int, input().split()))
uniq = []
for i in range(len(a)):
    if a.count(a[i]) == 1:
        uniq.append(a[i])
print(*uniq)

# 38* Кегельбан
# N кеглей выставили в один ряд, занумеровав их слева направо числами от 1 до N. Затем по этому ряду бросили K шаров,
# при этом i-й шар сбил все кегли с номерами от lᵢ до rᵢ включительно. Определите, какие кегли остались стоять на месте.
# Программа получает на вход количество кеглей N и количество бросков K.
# Далее идет K пар чисел lᵢ, rᵢ, при этом 1 ≤ lᵢ ≤ rᵢ ≤ N ≤ 100.
# Программа должна вывести последовательность из N символов, где j-й символесть “I”, если j-я кегля осталась стоять,
# или “.”, если j-я кегля была сбита.
n, k = map(int, input().split())
kegli = ['I']*n
for i in range(k):
    first, last = map(int, input().split())
    for j in range(first-1, last):
        kegli[j] = '.'
print(''.join(kegli))

# 39* Ферзи
# Известно, что на доске 8×8 можно расставить 8 ферзей так, чтобы они не били друг друга.
# Вам дана расстановка 8 ферзей на доске, определите, есть ли среди них пара бьющих друг друга.
# Программа получает на вход восемь пар чисел, каждое число от 1 до 8 - координаты 8 ферзей.
# Если ферзи не бьют друг друга, выведите слово NO, иначе выведите YES.
ans = 'NO'
x, y = [], []
for i in range(8):
    cx, cy = map(int, input().split())
    x.append(cx)
    y.append(cy)
for i in range(7):
    for j in range(i + 1, 8):
        if x[i] == x[j] or y[i] == y[j] \
                or x[i] + y[i] == x[j] + y[j] \
                or (x[i] - y[i]) == (x[j] - y[j]):
            ans = 'YES'
            break
    if ans == 'YES':
        break
print(ans)

# 40* Сжатие списка
# Дан список целых чисел. Требуется “сжать” его, переместив все ненулевые элементы в левую часть списка,
# не меняя их порядок, а все нули - в правую часть. Порядок ненулевых элементов изменять нельзя,
# дополнительный список использовать нельзя, задачу нужно выполнить за один проход по списку.
# Распечатайте полученный список.
a = list(map(int, input().split()))
i = 0
endlist = len(a) - 1
while i < endlist:
    if a[i] == 0:
        a.pop(i)
        a.append(0)
        endlist -= 1
    else:
        i += 1
print(*a)

# 41* Самое частое число
# Дан список. Не изменяя его и не используя дополнительные списки, определите, какое число в этом списке
# встречается чаще всего. Если таких чисел несколько, выведите любое из них.
a = list(map(int, input().split()))
maxcount = 0
for i in a:
    if a.count(i) > maxcount:
        maxcount = a.count(i)
        elem = i
print(elem)